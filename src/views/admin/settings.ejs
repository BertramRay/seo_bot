<!DOCTYPE html>
<html lang="zh-CN">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>系统设置 - SEO博客管理系统</title>
  <%- include('../partials/styles') %>
</head>
<body>
  <div class="container-fluid">
    <div class="row">
      <%- include('../partials/sidebar', { currentPage: 'settings' }) %>
      
      <!-- 主内容区 -->
      <div class="col-md-10 content">
        <h2 class="mb-4">系统设置</h2>
        
        <% if (typeof message !== 'undefined' && message) { %>
          <div class="alert alert-<%= message.type %> alert-dismissible fade show" role="alert">
            <%= message.text %>
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
          </div>
        <% } %>
        
        <!-- 设置选项卡 -->
        <div class="card">
          <div class="card-header">
            <ul class="nav nav-tabs card-header-tabs" id="settingsTabs" role="tablist">
              <li class="nav-item" role="presentation">
                <button class="nav-link active" id="general-tab" data-bs-toggle="tab" data-bs-target="#general" type="button" role="tab" aria-controls="general" aria-selected="true">基本设置</button>
              </li>
              <li class="nav-item" role="presentation">
                <button class="nav-link" id="content-tab" data-bs-toggle="tab" data-bs-target="#content" type="button" role="tab" aria-controls="content" aria-selected="false">内容生成</button>
              </li>
              <li class="nav-item" role="presentation">
                <button class="nav-link" id="seo-tab" data-bs-toggle="tab" data-bs-target="#seo" type="button" role="tab" aria-controls="seo" aria-selected="false">SEO设置</button>
              </li>
              <li class="nav-item" role="presentation">
                <button class="nav-link" id="schedule-tab" data-bs-toggle="tab" data-bs-target="#schedule" type="button" role="tab" aria-controls="schedule" aria-selected="false">自动发布</button>
              </li>
              <li class="nav-item" role="presentation">
                <button class="nav-link" id="api-tab" data-bs-toggle="tab" data-bs-target="#api" type="button" role="tab" aria-controls="api" aria-selected="false">API设置</button>
              </li>
            </ul>
          </div>
          <div class="card-body">
            <div class="tab-content" id="settingsTabContent">
              <!-- 基本设置 -->
              <div class="tab-pane fade show active" id="general" role="tabpanel" aria-labelledby="general-tab">
                <form action="/admin/settings/update" method="POST" class="settings-form" data-section="general">
                  <div class="mb-3">
                    <label for="siteName" class="form-label">网站名称</label>
                    <input type="text" class="form-control" id="siteName" name="siteName" value="<%= typeof config !== 'undefined' && config.siteName ? config.siteName : '' %>" required>
                    <div class="form-text">网站标题，将显示在博客页面</div>
                  </div>
                  
                  <div class="mb-3">
                    <label for="siteDescription" class="form-label">网站描述</label>
                    <textarea class="form-control" id="siteDescription" name="siteDescription" rows="2"><%= typeof config !== 'undefined' && config.siteDescription ? config.siteDescription : '' %></textarea>
                    <div class="form-text">显示在首页和SEO元标签中的网站描述</div>
                  </div>
                  
                  <div class="mb-3">
                    <label for="siteUrl" class="form-label">网站URL</label>
                    <input type="url" class="form-control" id="siteUrl" name="siteUrl" value="<%= typeof config !== 'undefined' && config.siteUrl ? config.siteUrl : '' %>" required>
                    <div class="form-text">网站完整URL，用于生成站点地图和绝对链接</div>
                  </div>
                  
                  <div class="mb-3">
                    <label for="language" class="form-label">网站语言</label>
                    <select class="form-select" id="language" name="language">
                      <option value="zh-CN" <%= typeof config !== 'undefined' && config.language === 'zh-CN' ? 'selected' : '' %>>简体中文</option>
                      <option value="en-US" <%= typeof config !== 'undefined' && config.language === 'en-US' ? 'selected' : '' %>>English (US)</option>
                    </select>
                    <div class="form-text">网站的主要语言，影响生成内容和日期格式</div>
                  </div>
                  
                  <div class="mb-3">
                    <label for="contactEmail" class="form-label">联系邮箱</label>
                    <input type="email" class="form-control" id="contactEmail" name="contactEmail" value="<%= typeof config !== 'undefined' && config.contactEmail ? config.contactEmail : '' %>">
                    <div class="form-text">用于接收系统通知和用户反馈</div>
                  </div>
                  
                  <div class="d-grid gap-2 d-md-flex justify-content-md-end">
                    <button type="submit" class="btn btn-primary">保存设置</button>
                  </div>
                </form>
              </div>
              
              <!-- 内容生成设置 -->
              <div class="tab-pane fade" id="content" role="tabpanel" aria-labelledby="content-tab">
                <form action="/admin/settings/update" method="POST" class="settings-form" data-section="content">
                  <div class="mb-3">
                    <label for="model" class="form-label">AI模型</label>
                    <select class="form-select" id="model" name="model">
                      <option value="gpt-4o" <%= typeof config !== 'undefined' && config.content?.model === 'gpt-4o' ? 'selected' : '' %>>GPT-4o</option>
                      <option value="gpt-4o-mini" <%= typeof config !== 'undefined' && config.content?.model === 'gpt-4o-mini' ? 'selected' : '' %>>GPT-4o Mini</option>
                    </select>
                    <div class="form-text">用于生成内容的AI模型，高级模型生成质量更高但成本更高</div>
                  </div>
                  
                  <div class="mb-3">
                    <label for="minWordsPerPost" class="form-label">文章最小字数</label>
                    <input type="number" class="form-control" id="minWordsPerPost" name="minWordsPerPost" value="<%= typeof config !== 'undefined' && config.content?.minWordsPerPost ? config.content.minWordsPerPost : 800 %>" min="300" max="3000" required>
                    <div class="form-text">生成文章的最小字数</div>
                  </div>
                  
                  <div class="mb-3">
                    <label for="maxWordsPerPost" class="form-label">文章最大字数</label>
                    <input type="number" class="form-control" id="maxWordsPerPost" name="maxWordsPerPost" value="<%= typeof config !== 'undefined' && config.content?.maxWordsPerPost ? config.content.maxWordsPerPost : 1500 %>" min="500" max="5000" required>
                    <div class="form-text">生成文章的最大字数</div>
                  </div>
                  
                  <div class="mb-3 form-check">
                    <input type="checkbox" class="form-check-input" id="autoPublish" name="autoPublish" <%= typeof config !== 'undefined' && config.content?.autoPublish ? 'checked' : '' %>>
                    <label class="form-check-label" for="autoPublish">自动发布生成的文章</label>
                    <div class="form-text">启用后，生成的文章将自动发布，无需手动审核</div>
                  </div>
                  
                  <div class="mb-3 form-check">
                    <input type="checkbox" class="form-check-input" id="enableFeaturedImages" name="enableFeaturedImages" <%= typeof config !== 'undefined' && config.content?.enableFeaturedImages ? 'checked' : '' %>>
                    <label class="form-check-label" for="enableFeaturedImages">为文章生成特色图片</label>
                    <div class="form-text">启用后，系统会为每篇文章生成相关的特色图片</div>
                  </div>
                  
                  <div class="d-grid gap-2 d-md-flex justify-content-md-end">
                    <button type="submit" class="btn btn-primary">保存设置</button>
                  </div>
                </form>
              </div>
              
              <!-- SEO设置 -->
              <div class="tab-pane fade" id="seo" role="tabpanel" aria-labelledby="seo-tab">
                <form action="/admin/settings/update" method="POST" class="settings-form" data-section="seo">
                  <div class="mb-3">
                    <label for="metaTitle" class="form-label">默认Meta标题</label>
                    <input type="text" class="form-control" id="metaTitle" name="metaTitle" value="<%= typeof config !== 'undefined' && config.seo?.metaTitle ? config.seo.metaTitle : '' %>">
                    <div class="form-text">默认的页面标题模板，可使用 {siteName} 和 {pageTitle} 作为变量</div>
                  </div>
                  
                  <div class="mb-3">
                    <label for="metaDescription" class="form-label">默认Meta描述</label>
                    <textarea class="form-control" id="metaDescription" name="metaDescription" rows="2"><%= typeof config !== 'undefined' && config.seo?.metaDescription ? config.seo.metaDescription : '' %></textarea>
                    <div class="form-text">默认的页面描述，当页面未指定描述时使用</div>
                  </div>
                  
                  <div class="mb-3 form-check">
                    <input type="checkbox" class="form-check-input" id="generateSitemap" name="generateSitemap" <%= typeof config !== 'undefined' && config.seo?.generateSitemap ? 'checked' : '' %>>
                    <label class="form-check-label" for="generateSitemap">自动生成站点地图</label>
                    <div class="form-text">启用后，系统会在新文章发布时自动更新站点地图</div>
                  </div>
                  
                  <div class="mb-3 form-check">
                    <input type="checkbox" class="form-check-input" id="enableCanonical" name="enableCanonical" <%= typeof config !== 'undefined' && config.seo?.enableCanonical ? 'checked' : '' %>>
                    <label class="form-check-label" for="enableCanonical">启用规范链接</label>
                    <div class="form-text">添加canonical标签以防止重复内容问题</div>
                  </div>
                  
                  <div class="mb-3">
                    <label for="robotsTxt" class="form-label">robots.txt 内容</label>
                    <textarea class="form-control font-monospace" id="robotsTxt" name="robotsTxt" rows="6"><%= typeof config !== 'undefined' && config.seo?.robotsTxt ? config.seo.robotsTxt : '' %></textarea>
                    <div class="form-text">自定义robots.txt文件内容，控制搜索引擎爬取行为</div>
                  </div>
                  
                  <div class="d-grid gap-2 d-md-flex justify-content-md-end">
                    <button type="submit" class="btn btn-primary">保存设置</button>
                  </div>
                </form>
              </div>
              
              <!-- 自动发布设置 -->
              <div class="tab-pane fade" id="schedule" role="tabpanel" aria-labelledby="schedule-tab">
                <form action="/admin/settings/update" method="POST" class="settings-form" data-section="schedule">
                  <div class="mb-3 form-check">
                    <input type="checkbox" class="form-check-input" id="enableScheduledGeneration" name="enableScheduledGeneration" <%= typeof config !== 'undefined' && config.schedule?.enableScheduledGeneration ? 'checked' : '' %>>
                    <label class="form-check-label" for="enableScheduledGeneration">启用定时生成</label>
                    <div class="form-text">按照设定的时间表自动生成新内容</div>
                  </div>
                  
                  <div class="mb-3">
                    <label for="generationCronExpression" class="form-label">生成计划 (Cron表达式)</label>
                    <input type="text" class="form-control" id="generationCronExpression" name="generationCronExpression" value="<%= typeof config !== 'undefined' && config.schedule?.generationCronExpression ? config.schedule.generationCronExpression : '0 3 * * *' %>" placeholder="0 3 * * *">
                    <div class="form-text">
                      使用Cron表达式设置自动生成时间，默认为每天凌晨3点(0 3 * * *)。
                      <a href="https://crontab.guru/" target="_blank">Cron表达式帮助</a>
                    </div>
                    <% if (typeof cronError !== 'undefined' && cronError) { %>
                      <div class="alert alert-warning mt-2">
                        <strong>当前表达式解析错误：</strong> <%= cronError %>
                      </div>
                    <% } else if (typeof nextRun !== 'undefined' && nextRun) { %>
                      <div class="alert alert-info mt-2">
                        <strong>下次运行时间：</strong> <%= nextRun %>
                      </div>
                    <% } %>
                  </div>
                  
                  <div class="mb-3">
                    <label for="postsPerScheduledRun" class="form-label">每次生成文章数</label>
                    <input type="number" class="form-control" id="postsPerScheduledRun" name="postsPerScheduledRun" value="<%= typeof config !== 'undefined' && config.schedule?.postsPerScheduledRun ? config.schedule.postsPerScheduledRun : 1 %>" min="1" max="10" required>
                    <div class="form-text">每次定时任务执行时生成的文章数量</div>
                  </div>
                  
                  <div class="d-grid gap-2 d-md-flex justify-content-md-end">
                    <button type="submit" class="btn btn-primary">保存设置</button>
                  </div>
                </form>
              </div>
              
              <!-- API设置 -->
              <div class="tab-pane fade" id="api" role="tabpanel" aria-labelledby="api-tab">
                <form action="/admin/settings/update" method="POST" class="settings-form" data-section="api">
                  <div class="mb-3">
                    <label for="openaiApiKey" class="form-label">OpenAI API密钥</label>
                    <input type="password" class="form-control" id="openaiApiKey" name="openaiApiKey" value="<%= typeof config !== 'undefined' && config.api?.openaiApiKey ? '********' : '' %>">
                    <div class="form-text">用于访问OpenAI API的密钥，仅在更改时填写</div>
                  </div>
                  
                  <div class="mb-3">
                    <label for="openaiApiEndpoint" class="form-label">OpenAI API端点</label>
                    <input type="text" class="form-control" id="openaiApiEndpoint" name="openaiApiEndpoint" value="<%= typeof config !== 'undefined' && config.api?.openaiApiEndpoint ? config.api.openaiApiEndpoint : 'https://api.openai.com/v1' %>">
                    <div class="form-text">API端点URL，使用默认值或自定义端点</div>
                  </div>
                  
                  <div class="mb-3">
                    <label for="mongodbUri" class="form-label">MongoDB连接URI</label>
                    <input type="text" class="form-control" id="mongodbUri" name="mongodbUri" value="<%= typeof config !== 'undefined' && config.api?.mongodbUri ? '********' : '' %>">
                    <div class="form-text">MongoDB数据库连接字符串，仅在需要更改时填写</div>
                  </div>
                  
                  <div class="d-grid gap-2 d-md-flex justify-content-md-end">
                    <button type="submit" class="btn btn-primary">保存设置</button>
                  </div>
                </form>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>

  <%- include('../partials/scripts') %>
  <script>
    document.addEventListener('DOMContentLoaded', function() {
      // 表单提交处理
      document.querySelectorAll('.settings-form').forEach(form => {
        form.addEventListener('submit', function(e) {
          e.preventDefault();
          
          const section = this.dataset.section;
          const formData = new FormData(this);
          
          // 处理复选框
          this.querySelectorAll('input[type="checkbox"]').forEach(checkbox => {
            if (!formData.has(checkbox.name)) {
              formData.append(checkbox.name, 'false');
            }
          });
          
          const data = new URLSearchParams();
          data.append('section', section);
          
          for (let [key, value] of formData.entries()) {
            if (value === 'on') value = 'true';
            if (key === 'openaiApiKey' && value === '********') continue;
            if (key === 'mongodbUri' && value === '********') continue;
            
            data.append(`${section}[${key}]`, value);
          }
          
          fetch('/admin/settings/update', {
            method: 'POST',
            headers: { 'Content-Type': 'application/x-www-form-urlencoded' },
            body: data
          })
          .then(response => response.json())
          .then(data => {
            if (data.success) {
              const alert = document.createElement('div');
              alert.className = 'alert alert-success alert-dismissible fade show';
              alert.innerHTML = `
                ${data.message}
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
              `;
              
              this.insertAdjacentElement('beforebegin', alert);
              
              // 3秒后自动消失
              setTimeout(() => {
                if (alert) {
                  const bsAlert = new bootstrap.Alert(alert);
                  bsAlert.close();
                }
              }, 3000);
            } else {
              const alert = document.createElement('div');
              alert.className = 'alert alert-danger alert-dismissible fade show';
              alert.innerHTML = `
                保存失败: ${data.message}
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
              `;
              
              this.insertAdjacentElement('beforebegin', alert);
            }
          })
          .catch(error => {
            console.error('Error:', error);
            
            const alert = document.createElement('div');
            alert.className = 'alert alert-danger alert-dismissible fade show';
            alert.innerHTML = `
              保存失败: 请检查网络连接
              <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            `;
            
            this.insertAdjacentElement('beforebegin', alert);
          });
        });
      });
    });
  </script>
</body>
</html> 